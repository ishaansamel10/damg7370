{
	"name": "Customer_Dim_Load",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "SnowflakeTable11",
						"type": "DatasetReference"
					},
					"name": "CustomerPart1Load"
				},
				{
					"dataset": {
						"referenceName": "SnowflakeTable12",
						"type": "DatasetReference"
					},
					"name": "MaxSK"
				},
				{
					"dataset": {
						"referenceName": "SnowflakeTable12",
						"type": "DatasetReference"
					},
					"name": "SourceCustomerDim"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "SnowflakeTable13",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "join1"
				},
				{
					"name": "StageWithDim"
				},
				{
					"name": "filterExistingRows"
				},
				{
					"name": "surrogateKey1"
				},
				{
					"name": "derivedColumn1"
				},
				{
					"name": "aggregate1"
				}
			],
			"scriptLines": [
				"parameters{",
				"     JOB_ID as string (\"60\")",
				"}",
				"source(output(",
				"          CUSTOMERID as decimal(38,0),",
				"          CUSTOMERNAME as string,",
				"          BILLTO as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'table') ~> CustomerPart1Load",
				"source(output(",
				"          MAX_CUSTOMER_SK as decimal(38,0)",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     query: 'SELECT NVL(MAX(CUSTOMER_SK), 0) AS MAX_CUSTOMER_SK \\nFROM DAMG_NYPD_SCHEMA.DIM_CUSTOMER\\n',",
				"     format: 'query') ~> MaxSK",
				"source(output(",
				"          CUSTOMER_SK as decimal(38,0),",
				"          CUSTOMER_ID as decimal(38,0),",
				"          CUSTOMER_NAME as string,",
				"          DI_CREATEDDT as timestamp,",
				"          PID as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'table') ~> SourceCustomerDim",
				"CustomerPart1Load, MaxSK join(1==1,",
				"     joinType:'cross',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join1",
				"aggregate1, SourceCustomerDim join(CUSTOMERID == CUSTOMER_ID,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> StageWithDim",
				"StageWithDim filter(isNull(CUSTOMER_ID)) ~> filterExistingRows",
				"filterExistingRows keyGenerate(output(Row_Num as long),",
				"     startAt: 1L,",
				"     stepValue: 1L) ~> surrogateKey1",
				"surrogateKey1 derive(CUSTOMER_SK = Row_Num + MAX_CUSTOMER_SK,",
				"          CREATE_DT = currentDate(),",
				"          JOB_ID = $JOB_ID) ~> derivedColumn1",
				"join1 aggregate(groupBy(CUSTOMERID,",
				"          CUSTOMERNAME,",
				"          MAX_CUSTOMER_SK),",
				"     COUNT_ID = count(CUSTOMERID)) ~> aggregate1",
				"derivedColumn1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          CUSTOMER_SK as decimal(38,0),",
				"          CUSTOMER_ID as decimal(38,0),",
				"          CUSTOMER_NAME as string,",
				"          DI_CREATEDDT as timestamp,",
				"          PID as string",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     stageInsert: true,",
				"     mapColumn(",
				"          CUSTOMER_SK,",
				"          CUSTOMER_ID = CUSTOMERID,",
				"          CUSTOMER_NAME = CUSTOMERNAME,",
				"          DI_CREATEDDT = CREATE_DT,",
				"          PID = JOB_ID",
				"     )) ~> sink1"
			]
		}
	}
}