{
	"name": "Breed_Dim_Load",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "SnowflakeTable4",
						"type": "DatasetReference"
					},
					"name": "LoadFromSnowflakeStage"
				},
				{
					"dataset": {
						"referenceName": "SnowflakeTable5",
						"type": "DatasetReference"
					},
					"name": "BreedDimMaxID"
				},
				{
					"dataset": {
						"referenceName": "SnowflakeTable6",
						"type": "DatasetReference"
					},
					"name": "SourceBreedDim"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "SnowflakeTable7",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "SourceDataWithSK"
				},
				{
					"name": "aggregateBreedKeys"
				},
				{
					"name": "joinToTarget"
				},
				{
					"name": "filterExistingRow"
				},
				{
					"name": "surrogateKey"
				},
				{
					"name": "derivedColumn"
				}
			],
			"scriptLines": [
				"parameters{",
				"     DI_JOB_ID as string (\"59\")",
				"}",
				"source(output(",
				"          LICENSE_ISSUE_DATE as string,",
				"          LICENSE_NUMBER as string,",
				"          ANIMAL_NAME as string,",
				"          SPECIES as string,",
				"          PRIMARY_BREED as string,",
				"          SECONDARY_BREED as string,",
				"          ZIP_CODE as string,",
				"          DI_JOB_ID as string,",
				"          DI_LOAD_DATE as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'table') ~> LoadFromSnowflakeStage",
				"source(output(",
				"          MAXBREEDSK as decimal(38,0)",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     query: 'SELECT NVL(MAX(BREED_SK),0) AS MaxBreedSK FROM TEMP_SCHEMA.BREED_DIM',",
				"     format: 'query') ~> BreedDimMaxID",
				"source(output(",
				"          BREED_SK as decimal(38,0),",
				"          BREED_NK as decimal(38,0),",
				"          START_DT as date,",
				"          END_DT as date,",
				"          IS_CURRENT as decimal(10,2),",
				"          BREED_DK as decimal(10,2),",
				"          SPECIES_NAME as string,",
				"          PRIMARY_BREED_NAME as string,",
				"          SECONDARY_BREED_NAME as string,",
				"          DI_JOB_ID as string,",
				"          DI_LOAD_DATE as date",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'table') ~> SourceBreedDim",
				"LoadFromSnowflakeStage, BreedDimMaxID join(1==1,",
				"     joinType:'cross',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> SourceDataWithSK",
				"SourceDataWithSK aggregate(groupBy(SPECIES,",
				"          PRIMARY_BREED,",
				"          SECONDARY_BREED,",
				"          MAXBREEDSK),",
				"     COUNT_ROW = count(LICENSE_NUMBER)",
				") ~> aggregateBreedKeys",
				"aggregateBreedKeys, SourceBreedDim join(PRIMARY_BREED == PRIMARY_BREED_NAME",
				"     && SPECIES == SPECIES_NAME",
				"     && SECONDARY_BREED == SECONDARY_BREED_NAME,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> joinToTarget",
				"joinToTarget filter(isNull(SPECIES_NAME)&&isNull(PRIMARY_BREED_NAME)&&isNull(SECONDARY_BREED_NAME)) ~> filterExistingRow",
				"filterExistingRow keyGenerate(output(RowNum as long),",
				"     startAt: 1L,",
				"     stepValue: 1L) ~> surrogateKey",
				"surrogateKey derive(BREED_SK = MAXBREEDSK + RowNum,",
				"          DI_CREATED_DT = currentTimestamp(),",
				"          DI_JOB_ID = $DI_JOB_ID) ~> derivedColumn",
				"derivedColumn sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          BREED_SK as string,",
				"          BREED_NK as string,",
				"          START_DT as string,",
				"          END_DT as string,",
				"          IS_CURRENT as string,",
				"          BREED_DK as string,",
				"          SPECIES_NAME as string,",
				"          PRIMARY_BREED_NAME as string,",
				"          SECONDARY_BREED_NAME as string,",
				"          DI_JOB_ID as string,",
				"          DI_LOAD_DATE as string",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     stageInsert: true,",
				"     mapColumn(",
				"          BREED_SK,",
				"          BREED_NK,",
				"          START_DT,",
				"          END_DT,",
				"          IS_CURRENT,",
				"          BREED_DK,",
				"          SPECIES_NAME = SPECIES,",
				"          PRIMARY_BREED_NAME = PRIMARY_BREED,",
				"          SECONDARY_BREED_NAME = SECONDARY_BREED,",
				"          DI_JOB_ID,",
				"          DI_LOAD_DATE = DI_CREATED_DT",
				"     )) ~> sink1"
			]
		}
	}
}